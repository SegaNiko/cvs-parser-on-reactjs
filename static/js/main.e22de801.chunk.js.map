{"version":3,"sources":["consts/keys.js","parser/validation.js","parser/parcer.js","components/Table/Table.jsx","images/arhimed.jpg","components/Error/Error.jsx","components/InputFile/InputFile.jsx","components/App/App.jsx","index.jsx"],"names":["keys","generateObj","value","hasErr","trim","hasError","CsvParse","render","onDataUploaded","onError","event","file","target","files","fileFail","name","split","pop","Papa","parse","skipEmptyLines","error","err","inputElem","reason","complete","results","data","shift","unshift","formatedResult","compose","apply","lift","zipObj","splitAt","propTypes","PropTypes","array","isRequired","func","Table","arr","className","map","item","id","FirstName","Phone","Email","Age","Experience","YearlyIncome","Haschildren","Licensestates","Expirationdate","Licensenumber","duplicate","val","Error","alt","src","img","InputFile","onChange","type","htmlFor","App","useState","setData","setError","obj","newArr","index","Object","entries","reduce","acc","key","test","substr","toLowerCase","Date","validation","finallyArr","i","length","console","log","convert","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e22de801.chunk.js","sourcesContent":["const keys = [\r\n  'FirstName',\r\n  'Phone',\r\n  'Email',\r\n  'Age',\r\n  'Experience',\r\n  'YearlyIncome',\r\n  'Haschildren',\r\n  'Licensestates',\r\n  'Expirationdate',\r\n  'Licensenumber',\r\n];\r\n\r\nexport default keys;","const generateObj = (value, hasErr) => {\r\n  return {value: value.trim(), hasError: hasErr}\r\n}\r\n\r\nexport const validation = (key, value) => { \r\n       // eslint-disable-next-line no-useless-escape\r\n  const regEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n       // eslint-disable-next-line no-useless-escape\r\n  const regPhone = /^(\\+1|1)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n       // eslint-disable-next-line no-useless-escape\r\n  const regListenNum = /^[a-z0-9_-]{6}$/;\r\n\r\n  switch (key) {\r\n    case 'FirstName' : \r\n     if (value) {\r\n        return generateObj(value,false)\r\n     } else {\r\n       return generateObj(value,true)\r\n      }\r\n     \r\n    case 'Phone' :\r\n      if (regPhone.test(value) === true) {\r\n        return generateObj(value, false)\r\n      } else return generateObj(value, true)\r\n\r\n    case 'Email' :\r\n      if (regEmail.test(value.trim()) === true) {\r\n        return generateObj(value, false)\r\n      } else return generateObj(value, true)\r\n     \r\n    case 'Age' :\r\n      if (value >= 21 && value !== 0) {\r\n        return generateObj(value, false)\r\n      } else  return generateObj(value, true)\r\n     \r\n      // bad Validation TODO\r\n    case 'Experience':\r\n      if (value) {\r\n        return generateObj(value, false)\r\n      } else  return generateObj(value, true)\r\n     \r\n    case 'YearlyIncome': \r\n      if (value < 1000000) {\r\n        return {value: value.trim().substr(0,8), hasError: false }\r\n      } else return {value: value.trim().substr(0,8), hasError: true }\r\n      \r\n    case 'Haschildren' :\r\n      if (value.toLowerCase() === \"false\" || value === \"\") {\r\n        return generateObj(value = \"false\", false)\r\n      } \r\n      if (value.toLowerCase() === \"true\") {\r\n        return generateObj(value = \"true\", false)\r\n      } else return generateObj(value = \"\", true)\r\n      \r\n    case 'Licensestates' :\r\n      if (value) return generateObj(value, false)\r\n      else return generateObj(value, true)\r\n      \r\n    case 'Expirationdate' :\r\n      if (Date.parse(new Date(value)) < Date.parse(new Date())){\r\n        if (value) return generateObj(value, false)\r\n      } else return generateObj(value, true)\r\n      break\r\n    case 'Licensenumber' :\r\n      if (regListenNum.test(value) === true){\r\n        return generateObj(value, false)\r\n      } else return generateObj(value, true)\r\n\r\n    default : return generateObj(value, false)\r\n  } \r\n}\r\n\r\nexport const checkDuplicate = (arr) => {\r\n  const newArr =  arr.map(item => {\r\n    // Check Experiance with Age\r\n    if (+item.Experience.value >= 0 && +item.Experience.value < +item.Age.value ){\r\n      item.Experience.hasError = false\r\n    } else item.Experience.hasError = true\r\n\r\n    for (let i = 0; i < arr.length ; i++ ) {\r\n      if (arr[i] !== item) {\r\n        if (arr[i].FirstName.value === item.FirstName.value || \r\n          arr[i].Phone.value === item.Phone.value || \r\n          arr[i].Email.value.toLowerCase() === item.Email.value.toLowerCase()){\r\n            item.duplicate = [...item.duplicate,arr[i].id]\r\n        }\r\n      }\r\n    }\r\n    return item\r\n  })\r\n\r\n  return newArr\r\n}\r\n      \r\n      \r\n     \r\n     \r\n\r\n\r\n      \r\n     \r\n      ","import PropTypes from 'prop-types'\r\n\r\nimport Papa from 'papaparse'\r\nimport { apply, compose, lift, splitAt, zipObj } from 'ramda'\r\n\r\nconst CsvParse = ({render, keys, onDataUploaded, onError }) => {\r\n\r\n  const handleFile = event => {\r\n    const file = event.target.files[0];\r\n    const fileFail = file.name.split(\".\").pop() !== \"csv\";\r\n\r\n    // Documentation https://www.papaparse.com/\r\n    Papa.parse(file, {\r\n      skipEmptyLines: true,\r\n      error (err, file, inputElem, reason)  {\r\n        onError({ err, file, inputElem, reason })\r\n      },\r\n      complete: function(results) {\r\n        const data = results.data\r\n\r\n        // remove display headers\r\n        data.shift()\r\n\r\n        // add api headers\r\n        data.unshift(keys)\r\n\r\n        // convert arrays to objects\r\n        const formatedResult = compose(\r\n          apply(lift(zipObj)),\r\n          splitAt(1),\r\n        )(data)\r\n\r\n        // send result to state\r\n        onError(fileFail)\r\n        onDataUploaded(formatedResult)\r\n      },\r\n    })\r\n  }\r\n  return (render(handleFile))\r\n}\r\n\r\nCsvParse.propTypes = {\r\n  keys: PropTypes.array.isRequired,\r\n  onDataUploaded: PropTypes.func.isRequired,\r\n  onError: PropTypes.func,\r\n}\r\n\r\nexport default CsvParse\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport \"./index.css\"\r\n\r\nexport const Table = ({arr}) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>id</th>\r\n          <th>Full Name</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Age</th>\r\n          <th>Experience</th>\r\n          <th>Yearly Income</th>\r\n          <th>Has children</th>\r\n          <th>License states</th>\r\n          <th>Expiration date</th>\r\n          <th>License number</th>\r\n          <th>Duplicate</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n       {arr.map(item => (\r\n         <tr key={item.FirstName.value + item.id}>\r\n            <td className=\"table__td\">{item.id}</td>\r\n            <td className={item.FirstName.hasError ? \"table__td-err\" : \"table__td\"}>{item.FirstName.value}</td>\r\n            <td className={item.Phone.hasError ? \"table__td-err\" : \"table__td\"}>{item.Phone.value}</td>\r\n            <td className={item.Email.hasError ? \"table__td-err\" : \"table__td\"}>{item.Email.value}</td>\r\n            <td className={item.Age.hasError ? \"table__td-err\" : \"table__td\"}>{item.Age.value}</td>\r\n            <td className={item.Experience.hasError ? \"table__td-err\" : \"table__td\"}>{item.Experience.value}</td>\r\n            <td className={item.YearlyIncome.hasError ? \"table__td-err\" : \"table__td\"}>{item.YearlyIncome.value}</td>\r\n            <td className={item.Haschildren.hasError ? \"table__td-err\" : \"table__td\"}>{item.Haschildren.value}</td>\r\n            <td className={item.Licensestates.hasError ? \"table__td-err\" : \"table__td\"}>{item.Licensestates.value}</td>\r\n            <td className={item.Expirationdate.hasError ? \"table__td-err\" : \"table__td\"}>{item.Expirationdate.value}</td>\r\n            <td className={item.Licensenumber.hasError ? \"table__td-err\" : \"table__td\"}>{item.Licensenumber.value}</td>\r\n            <td className=\"table__td\">{item.duplicate.map(val => `${val} `)}</td>\r\n        </tr>\r\n        ))}\r\n     </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  arr: PropTypes.array.isRequired\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/arhimed.eabcbf5b.jpg\";","import React from 'react'\r\nimport img from '../../images/arhimed.jpg'\r\n\r\nimport \"./index.css\"\r\n\r\nexport const Error = () => {\r\n  return (\r\n    <div className=\"error\">\r\n         <h3 className=\"error__title\">Arhimed confused!</h3>\r\n         <p className=\"error__text\">Please check format file before send it is must be .csv</p>\r\n         <img className=\"error__img\" alt=\"think-about\" src={img} />\r\n       </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport \"./index.css\"\r\n\r\nexport const InputFile = ({onChange}) => {\r\n  return (\r\n    <div className=\"input__wrapper\">\r\n      <input id=\"input__file\" name=\"file\" type=\"file\" className=\"input input__file\" onChange={onChange} />\r\n      <label htmlFor=\"input__file\" className=\"input__file-button\" >\r\n        <span className=\"input__file-icon-wrapper\"><i className=\"fas fa-cloud-download-alt\"></i></span>\r\n        <span className=\"input__file-button-text\">Choose one file</span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\n\nimport keys from \"../../consts/keys\"\nimport { validation,checkDuplicate } from '../../parser/validation'\n\nimport CsvParse from '../../parser/parcer'\nimport {Table} from '../Table/Table';\nimport { Error } from '../Error/Error';\nimport { InputFile } from '../InputFile/InputFile';\n\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleData = data => {\n    setData({ data })\n  }\n  const handleError = error => {\n    setError(error)\n  };\n\n  // convetn responce from parser obj{data[]}  to table\n  const convert = (obj) => {\n    // check Error and convert to \n    const newArr = obj.data.map((item, index) =>{\n      return Object.entries(item).reduce((acc, [key,value]) => {\n        return {...acc, [key]: validation(key,value)}\n      },{id: index + 1, duplicate: [],})\n    })\n    // Test result\n    // console.log(newArr) \n    const finallyArr = checkDuplicate(newArr)\n    //    Test result\n    console.log(\"Result, =\" ,finallyArr)\n    // create and rendering table\n    return <Table arr={finallyArr} />\n  }\n\n  return (\n    <>  \n      <header>\n        <h1 className=\"green accent-2\">Demo React Csv Parse</h1> \n      </header>\n      <div className=\"container\">    \n        {/* Component-parser  */}\n        <CsvParse\n          keys={keys}\n          onDataUploaded={handleData}\n          onError={handleError}\n          render={onChange => {return(<InputFile onChange={onChange} />)}}\n        />\n        \n        {/* Rendering content  error or component */}\n       {!error && data ? convert(data) : error ? <Error></Error> : <div></div>}\n      \n     </div>\n   </>\n  )  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\n\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}