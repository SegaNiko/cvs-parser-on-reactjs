{"version":3,"sources":["consts/keys.js","parser/parcer.js","components/Table/Table.jsx","components/App/App.jsx","parser/validation.js","index.jsx"],"names":["keys","CsvParse","render","onDataUploaded","onError","event","file","target","files","fileFail","name","split","pop","Papa","parse","skipEmptyLines","error","err","inputElem","reason","complete","results","data","shift","unshift","formatedResult","compose","apply","lift","zipObj","splitAt","propTypes","PropTypes","array","isRequired","func","Table","arr","className","map","item","id","FirstName","hasError","value","Phone","Email","Age","Experience","YearlyIncome","Haschildren","Licensestates","Expirationdate","Licensenumber","duplicate","val","App","useState","setData","setError","onChange","type","htmlFor","obj","newArr","index","Object","entries","reduce","acc","key","trim","test","substr","toLowerCase","Date","length","validation","checkDuplicate","i","console","log","convert","alt","src","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.614e502c.chunk.js","sourcesContent":["const keys = [\r\n  'FirstName',\r\n  'Phone',\r\n  'Email',\r\n  'Age',\r\n  'Experience',\r\n  'YearlyIncome',\r\n  'Haschildren',\r\n  'Licensestates',\r\n  'Expirationdate',\r\n  'Licensenumber',\r\n];\r\n\r\nexport default keys;","import PropTypes from 'prop-types'\r\n\r\nimport Papa from 'papaparse'\r\nimport { apply, compose, lift, splitAt, zipObj } from 'ramda'\r\n\r\nconst CsvParse = ({render, keys, onDataUploaded, onError }) => {\r\n\r\n  const handleFile = event => {\r\n    const file = event.target.files[0];\r\n    const fileFail = file.name.split(\".\").pop() !== \"csv\";\r\n\r\n    // Documentation https://www.papaparse.com/\r\n    Papa.parse(file, {\r\n      skipEmptyLines: true,\r\n      error (err, file, inputElem, reason)  {\r\n        onError({ err, file, inputElem, reason })\r\n      },\r\n      complete: function(results) {\r\n        const data = results.data\r\n\r\n        // remove display headers\r\n        data.shift()\r\n\r\n        // add api headers\r\n        data.unshift(keys)\r\n\r\n        // convert arrays to objects\r\n        const formatedResult = compose(\r\n          apply(lift(zipObj)),\r\n          splitAt(1),\r\n        )(data)\r\n\r\n        // send result to state\r\n        onError(fileFail)\r\n        onDataUploaded(formatedResult)\r\n      },\r\n    })\r\n  }\r\n  return (render(handleFile))\r\n}\r\n\r\nCsvParse.propTypes = {\r\n  keys: PropTypes.array.isRequired,\r\n  onDataUploaded: PropTypes.func.isRequired,\r\n  onError: PropTypes.func,\r\n}\r\n\r\nexport default CsvParse\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Table = ({arr}) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>id</th>\r\n          <th>Full Name</th>\r\n          <th>Phone</th>\r\n          <th>Email</th>\r\n          <th>Age</th>\r\n          <th>Experience</th>\r\n          <th>Yearly Income</th>\r\n          <th>Has children</th>\r\n          <th>License states</th>\r\n          <th>Expiration date</th>\r\n          <th>License number</th>\r\n          <th>Duplicate</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n       {arr.map(item => (\r\n         <tr key={item.FirstName.value + item.id}>\r\n            <td className=\"table__td\">{item.id}</td>\r\n            <td className={item.FirstName.hasError ? \"table__td-err\" : \"table__td\"}>{item.FirstName.value}</td>\r\n            <td className={item.Phone.hasError ? \"table__td-err\" : \"table__td\"}>{item.Phone.value}</td>\r\n            <td className={item.Email.hasError ? \"table__td-err\" : \"table__td\"}>{item.Email.value}</td>\r\n            <td className={item.Age.hasError ? \"table__td-err\" : \"table__td\"}>{item.Age.value}</td>\r\n            <td className={item.Experience.hasError ? \"table__td-err\" : \"table__td\"}>{item.Experience.value}</td>\r\n            <td className={item.YearlyIncome.hasError ? \"table__td-err\" : \"table__td\"}>{item.YearlyIncome.value}</td>\r\n            <td className={item.Haschildren.hasError ? \"table__td-err\" : \"table__td\"}>{item.Haschildren.value}</td>\r\n            <td className={item.Licensestates.hasError ? \"table__td-err\" : \"table__td\"}>{item.Licensestates.value}</td>\r\n            <td className={item.Expirationdate.hasError ? \"table__td-err\" : \"table__td\"}>{item.Expirationdate.value}</td>\r\n            <td className={item.Licensenumber.hasError ? \"table__td-err\" : \"table__td\"}>{item.Licensenumber.value}</td>\r\n            <td className=\"table__td\">{item.duplicate.map(val => `${val} `)}</td>\r\n        </tr>\r\n        ))}\r\n     </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  arr: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Table;","import React,{useState} from 'react'\n\nimport keys from \"../../consts/keys\"\nimport { validation } from '../../parser/validation'\n\nimport CsvParse from '../../parser/parcer'\nimport Table from '../Table/Table';\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleData = data => {\n    setData({ data })\n  }\n  const handleError = error => {\n    setError(error)\n  };\n\n  // convetn responce from parser obj{data[]}  to table\n  const convert = (obj) => {\n    // check Error and convert to \n    const newArr = obj.data.map((item, index) =>{\n      return Object.entries(item).reduce((acc, [key,value]) => {\n        return {...acc, [key]: validation(key,value)}\n      },{id: index + 1, duplicate: [],})\n    })\n    // Test result\n    // console.log(newArr) \n    const checkDuplicate = newArr.map(item => {\n      // cycle for find duplicate user\n      for (let i = 0; i < newArr.length ; i++ ) {\n        if (newArr[i] !== item) {\n          if (newArr[i].FirstName.value === item.FirstName.value || \n            newArr[i].Phone.value === item.Phone.value || \n            newArr[i].Email.value === item.Email.value){\n              item.duplicate = [...item.duplicate,newArr[i].id]\n          }\n        }\n      }\n      return item\n    })\n    //    Test result\n    console.log(checkDuplicate)\n    // create and paint table\n    return <Table arr={checkDuplicate} />\n  }\n\n  return (\n    <>  \n      <header><h1 className=\"green accent-2\">Demo React Csv Parse</h1> </header>\n      \n      <div className=\"container\">    \n        {/* Component-parser  */}\n        <CsvParse\n          keys={keys}\n          onDataUploaded={handleData}\n          onError={handleError}\n          render={onChange => {\n            return(\n              <div className=\"input__wrapper\">\n              <input id=\"input__file\" name=\"file\" type=\"file\" className=\"input input__file\" onChange={onChange} />\n              <label htmlFor=\"input__file\" className=\"input__file-button\" >\n                <span className=\"input__file-icon-wrapper\"><i className=\"fas fa-cloud-download-alt\"></i></span>\n                <span className=\"input__file-button-text\">Choose one file</span>\n              </label>\n              </div>)}}\n        />\n        {/* Painted content  */}\n       {!error && data ? convert(data) : error ? (\n       <div className=\"error\">\n         <h3 className=\"error__title\">Error: file not parsed</h3>\n         <p className=\"error__text\">Please check format file before send it is must be .cvs</p>\n         <img className=\"error__img\" alt=\"think-about\" src=\"https://lh3.googleusercontent.com/proxy/ta8pnf2KDpMolgBHsrGI6TyJ3UAbzzPMvziOVXpT5z8W-8xw5RSAql_1BaYf449sR7yFoYDroMDG9gJIkUlDda_5KU9IPMkmPFR0qPwR_hDFx4yZMMtgkaj2ng\"/>\n       </div>\n       ) : <div></div>}\n\n     </div>\n   </>\n  )  \n}\n\nexport default App;\n","export const validation = (key, value) => { \r\n       // eslint-disable-next-line no-useless-escape\r\n  const regEmail = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n       // eslint-disable-next-line no-useless-escape\r\n  const regPhone = /^(\\+1|1)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\r\n\r\n  switch (key) {\r\n    case 'FirstName' : \r\n     if (value) {\r\n        return {value: value.trim(), hasError : false}\r\n     } else {\r\n       return {value: value.trim(), hasError : true}\r\n      }\r\n     \r\n    case 'Phone' :\r\n      if (regPhone.test(value) === true) {\r\n        return {value: value.trim(), hasError: false }\r\n      } else return {value: value.trim(), hasError: true }\r\n\r\n    case 'Email' :\r\n      if (regEmail.test(value) === true) {\r\n        return {value: value.trim(), hasError: false }\r\n      } else return {value: value.trim(), hasError: true }\r\n     \r\n    case 'Age' :\r\n      if (value >= 21 && value !== 0) {\r\n        return {value: value.trim(), hasError: false }\r\n      } else  return {value: value.trim(), hasError: true }\r\n     \r\n      // bad Validation TODO\r\n    case 'Experience':\r\n      if (value < 30 && value >= 0) {\r\n        return {value: value.trim(), hasError: false }\r\n      } else  return {value: value.trim(), hasError: true}\r\n     \r\n    case 'YearlyIncome': \r\n      if (value) {\r\n        return {value: value.trim().substr(0,8), hasError: false }\r\n      } else return {value: value.trim().substr(0,8), hasError: true }\r\n      \r\n    case 'Haschildren' :\r\n      if (value.toLowerCase() === \"false\" || value === \"\") {\r\n        return {value: \"false\", hasError: false }\r\n      } \r\n      if (value.toLowerCase() === \"true\") {\r\n        return {value: \"true\", hasError: false }\r\n      } else return {value: \"\", hasError: true }\r\n      \r\n    case 'Licensestates' :\r\n      if (value) return {value: value.trim(), hasError: false }\r\n      else return {value: value.trim(), hasError: true }\r\n      \r\n    case 'Expirationdate' :\r\n      if (Date.parse(new Date(value)) < Date.parse(new Date())){\r\n        if (value) return {value: value.trim(), hasError: false }\r\n      } else return {value: value.trim(), hasError: true }\r\n      break\r\n    case 'Licensenumber' :\r\n      if (value.length !== 6){\r\n        return {value: value.trim(), hasError: true }\r\n      } else return {value: value.trim(), hasError: false }\r\n     \r\n\r\n    default : return {value: value.trim(), hasError: false }\r\n  } \r\n}\r\n\r\n      \r\n      \r\n     \r\n     \r\n\r\n\r\n      \r\n     \r\n      ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\n\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}